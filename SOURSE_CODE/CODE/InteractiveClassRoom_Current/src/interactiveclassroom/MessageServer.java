/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MessageServer.java
 *
 * Created on Mar 15, 2010, 9:32:13 AM
 */

package interactiveclassroom;

/**
 *
 * @author Ahesan_for_S
 */
import javax.swing.JOptionPane;
import java.rmi.registry.*;

import java.rmi.*;


public class MessageServer extends javax.swing.JFrame {

    /** Creates new form MessageServer */
     
    int choise;

    public MessageServer()
    {
        initComponents();

        /*int i=0;
        while(i<mainHome.cip)
        {
            jcmbMsg.insertItemAt(mainHome.ll.get(i),i);
            System.out.println("MC "+i+": "+mainHome.ll.get(i));
            i++;
        }*/
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPort = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jBBroadcast = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jcmbMsg = new javax.swing.JComboBox();
        jchbToAll = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Message Broadcast");
        setResizable(false);

        txtPort.setEditable(false);
        txtPort.setText("3232");

        jLabel1.setText("ClientIp");

        jLabel2.setText("Port");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("ServerMessage");

        jBBroadcast.setText("BroadCast");
        jBBroadcast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBroadcastActionPerformed(evt);
            }
        });

        jLabel4.setText("Status:");

        jcmbMsg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jcmbMsgFocusGained(evt);
            }
        });

        jchbToAll.setText("Send To All");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBBroadcast)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jchbToAll))
                        .addContainerGap(107, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcmbMsg, 0, 168, Short.MAX_VALUE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))))
            .addGroup(layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel4)
                .addContainerGap(335, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcmbMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jchbToAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBBroadcast)
                .addGap(43, 43, 43)
                .addComponent(jLabel4)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBroadcastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBroadcastActionPerformed
        // TODO add your handling code here:
        Registry registry;
        String Port =txtPort.getText();
        String remoteURL;
        int i=0;
        
        if(jchbToAll.isSelected())
        {
            choise=JOptionPane.showConfirmDialog(this, "Send To All...Are you Sure ?");
            while(i<mainHome.cip && choise==0)
            {
                try
                {
                    remoteURL = "rmi://" + mainHome.ll.get(i).toString() + ":" + Port + "/message";
                    MessageIntf msgInt;
                    System.out.println("Remote URL: "+remoteURL);
                    msgInt=(MessageIntf)Naming.lookup(remoteURL);

                    msgInt.setMessage(jTextArea1.getText());
                    i++;
                }
                catch(RemoteException re)
                {
                    JOptionPane.showMessageDialog(this,"RemoteAgent("+mainHome.ll.get(i)+") is not Ready !!!");
                }
                catch(NotBoundException ne)
                {
                    JOptionPane.showMessageDialog(this,"RemoteAgent("+mainHome.ll.get(i)+") is not Ready !!!");
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this,"RemoteAgent("+mainHome.ll.get(i)+") is not Ready !!!");
                }
            }
            if(i==0)
                jLabel4.setText("Status: No one is connected !!!");
            else
                jLabel4.setText("Status: Message Sent to All !!!");
        }
        else
        {
            try
            {
                    remoteURL = "rmi://" + jcmbMsg.getSelectedItem().toString() + ":" + Port + "/message";
                    MessageIntf msgInt;
                    System.out.println("Remote URL: "+remoteURL);
                    msgInt=(MessageIntf)Naming.lookup(remoteURL);

                    msgInt.setMessage(jTextArea1.getText());
                    jLabel4.setText("Status: Message Sent !!!");
            }
            catch(RemoteException re)
            {
                JOptionPane.showMessageDialog(this,"RemoteAgent("+jcmbMsg.getSelectedItem()+") is not Ready !!!");
            }
            catch(NotBoundException ne)
            {
                JOptionPane.showMessageDialog(this,"RemoteAgent("+jcmbMsg.getSelectedItem()+") is not Ready !!!");
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this,"RemoteAgent("+jcmbMsg.getSelectedItem()+") is not Ready !!!");
            }
        }
}//GEN-LAST:event_jBBroadcastActionPerformed

    private void jcmbMsgFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcmbMsgFocusGained
        // TODO add your handling code here:

        jcmbMsg.removeAllItems();
        int i=0;
        while(i<mainHome.cip)
        {
            jcmbMsg.insertItemAt(mainHome.ll.get(i),i);
            System.out.println("MC "+i+": "+mainHome.ll.get(i));
            i++;
        }
    }//GEN-LAST:event_jcmbMsgFocusGained

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MessageServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBroadcast;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox jchbToAll;
    private javax.swing.JComboBox jcmbMsg;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables

}
