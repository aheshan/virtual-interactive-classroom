/*
 * FileDownload.java
 *
 * Created on March 11, 2010, 4:18 PM
 */

package interactiveclassroom;

import java.io.*;
import java.rmi.*;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author  User
 */
public class FileDownload extends javax.swing.JFrame {
    
    /** Creates new form FileDownload */
     String clientIP;
     String clientPORT;
     String clientURL;
     String fileName;
     FileIntf fileIntf;
     
    public FileDownload() {
        initComponents();

        /*int i=0;
        while(i<mainHome.cip)
        {
            jcmbFD.insertItemAt(mainHome.ll.get(i),i);
            System.out.println("MC "+i+": "+mainHome.ll.get(i));
            i++;
        }*/
       
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfPort = new javax.swing.JTextField();
        jbConnect = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfSource = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfDestination = new javax.swing.JTextField();
        jbStart = new javax.swing.JButton();
        jbDisconnect = new javax.swing.JButton();
        jlStatus = new javax.swing.JLabel();
        jbBrows = new javax.swing.JButton();
        jcmbFD = new javax.swing.JComboBox();
        jbBrows1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("File Download");
        setResizable(false);

        jLabel1.setText("Client IP");

        jLabel2.setText("Port No");

        jtfPort.setEditable(false);
        jtfPort.setText("3232");

        jbConnect.setText("Connect");
        jbConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConnectActionPerformed(evt);
            }
        });

        jLabel4.setText("Select File to Download");

        jtfSource.setEnabled(false);

        jLabel5.setText("Select Path Where to Save");

        jtfDestination.setEnabled(false);

        jbStart.setText("Start");
        jbStart.setEnabled(false);
        jbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStartActionPerformed(evt);
            }
        });

        jbDisconnect.setText("Disconnect");
        jbDisconnect.setEnabled(false);
        jbDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDisconnectActionPerformed(evt);
            }
        });

        jlStatus.setText("Status: ");

        jbBrows.setText("Brows...");
        jbBrows.setEnabled(false);
        jbBrows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBrowsActionPerformed(evt);
            }
        });

        jcmbFD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jcmbFDFocusGained(evt);
            }
        });

        jbBrows1.setText("Brows...");
        jbBrows1.setEnabled(false);
        jbBrows1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBrows1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbStart, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                        .addComponent(jbDisconnect))
                    .addComponent(jlStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jtfDestination, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addComponent(jtfSource, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcmbFD, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jbConnect)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBrows)
                    .addComponent(jbBrows1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbConnect)
                    .addComponent(jcmbFD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBrows1))
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDestination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBrows))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbDisconnect)
                    .addComponent(jbStart))
                .addGap(23, 23, 23)
                .addComponent(jlStatus)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStartActionPerformed
// TODO add your handling code here:
        //boolean pathchecker=false;
        String clientPath = jtfSource.getText();
	String serverPath = jtfDestination.getText();
        System.out.println("Server Path " + serverPath);
        System.out.println("Client Path " + clientPath);
        
        if(serverPath.length() == 0 || clientPath.length()==0)
        {
            jlStatus.setText("Status : File Not Selected or Save path not found...");
            return;
        }

        try
        {
            int index = clientPath.lastIndexOf('\\');
            System.out.println("File Name - Index " + index);
            String fileName = clientPath.substring(index);
            System.out.println("File Name: " + fileName);
           
            File file = new File(serverPath + "\\" + fileName);
                
            BufferedOutputStream output = new BufferedOutputStream(new FileOutputStream(file));
            //jlStatus.setText("Status : File Downloading...");
            byte[] filedata = fileIntf.downloadFile(clientPath);
            System.out.println("Hello");
            output.write(filedata,0,filedata.length);
            output.flush();
            output.close();
            jlStatus.setText("Status : File Downloaded.");
        }
        catch(StringIndexOutOfBoundsException se)
        {
            jlStatus.setText("Status : Error Opening File...");
        }
        catch(Exception e)
        {
                jlStatus.setText("Status : Error Opening File or Check your Save Path");
        }
        
    }//GEN-LAST:event_jbStartActionPerformed

    private void jbConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConnectActionPerformed
    // TODO add your handling code here:
        jtfPort.setText("3232");
        clientIP=jcmbFD.getSelectedItem().toString();
        clientPORT = jtfPort.getText();
        
        clientURL = "rmi://" + clientIP + ":" + clientPORT + "/fileDownload";
        
        try
        {
           
            fileIntf = (FileIntf)Naming.lookup(clientURL);
            jlStatus.setText("Status : Connected to Client...");

            jcmbFD.setEnabled(false);
            jtfPort.setEnabled(false);
            jbConnect.setEnabled(false);

            jtfSource.setEnabled(true);
            jtfDestination.setEnabled(true);
            jbStart.setEnabled(true);
            jbDisconnect.setEnabled(true);
            jbBrows.setEnabled(true);
            jbBrows1.setEnabled(true);
        }
        catch(Exception e)
        {
            System.out.println("Exception : " + e);
            jlStatus.setText("Status : Remote Agent Not Ready...");
        }
}//GEN-LAST:event_jbConnectActionPerformed

    private void jbBrowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBrowsActionPerformed
        // TODO add your handling code here:

        String despath="";
        JFileChooser jf = new JFileChooser();
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        try
        {
            jf.showOpenDialog(this);
            despath = jf.getSelectedFile().toString();
            System.out.println("Selected Path: "+despath);

            if(despath==null)
                despath="";
            else
                jtfDestination.setText(despath);
        }
        catch(Exception e)
        {
            System.out.println("Browser Error::: "+e);
        }

        

    }//GEN-LAST:event_jbBrowsActionPerformed

    private void jbDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDisconnectActionPerformed
        // TODO add your handling code here:

        jcmbFD.setEnabled(true);
        jtfPort.setEnabled(true);
        jbConnect.setEnabled(true);
        jtfPort.setText("");
        jtfSource.setText("");
        jtfDestination.setText("");
        jlStatus.setText("Status:  Disconnected...");

        jtfSource.setEnabled(false);
        jtfDestination.setEnabled(false);
        jbStart.setEnabled(false);
        jbDisconnect.setEnabled(false);
        jbBrows.setEnabled(false);
        jbBrows1.setEnabled(false);
    }//GEN-LAST:event_jbDisconnectActionPerformed

    private void jbBrows1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBrows1ActionPerformed
        // TODO add your handling code here:
        try
        {
            String sfile;
            sfile = fileIntf.openFileChoser();
            jtfSource.setText(sfile);
            System.out.println("Selected File Client: "+sfile);
        }
        catch(Exception e)
        {
            System.out.println("Error: "+e);
        }
    }//GEN-LAST:event_jbBrows1ActionPerformed

    private void jcmbFDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcmbFDFocusGained
        // TODO add your handling code here:

        jcmbFD.removeAllItems();
        int i=0;
        while(i<mainHome.cip)
        {
            jcmbFD.insertItemAt(mainHome.ll.get(i),i);
            System.out.println("MC "+i+": "+mainHome.ll.get(i));
            i++;
        }
    }//GEN-LAST:event_jcmbFDFocusGained
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileDownload().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbBrows;
    private javax.swing.JButton jbBrows1;
    private javax.swing.JButton jbConnect;
    private javax.swing.JButton jbDisconnect;
    private javax.swing.JButton jbStart;
    private javax.swing.JComboBox jcmbFD;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JTextField jtfDestination;
    private javax.swing.JTextField jtfPort;
    private javax.swing.JTextField jtfSource;
    // End of variables declaration//GEN-END:variables
    
}
